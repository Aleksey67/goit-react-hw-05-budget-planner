{"version":3,"sources":["redux/planner/actions.js","redux/planner/reducer.js","redux/store.js","redux/planner/selectors.js","components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","components/BudgetForm/BudgetForm.jsx","components/BudgetForm/BudgetFormContainer.js","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.jsx","components/Stat/Stat.jsx","components/Values/Values.jsx","components/App/App.jsx","components/App/AppContainer.js","index.js"],"names":["Type","combineReducers","budget","state","action","type","payload","expense","filter","item","id","reducer","planner","plannerReducer","store","createStore","getBudget","getExpense","calculateTotalExpenses","createSelector","expenses","reduce","total","amount","calculateBalance","Form","onSubmit","children","StyledForm","defaultProps","styled","form","Label","customStyles","StyledLabel","label","props","Input","name","StyledInput","placeholder","input","Button","onClick","StyledButton","button","BudgetForm","onSave","e","preventDefault","currentInput","Number","target","querySelector","value","reset","connect","plannerSelectors","dispatch","plannerActions","ExpenseForm","balance","resultInput","shortid","generate","ExpensesTable","items","onRemove","Table","map","key","table","Stat","isPositive","Container","Value","div","p","section","Values","App","removeExpense","totalExpenses","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3998e344.chunk.js","sourcesContent":["export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addBudget = value => ({\n  type: Type.ADD_BUDGET,\n  payload: value,\n});\n\nexport const addExpense = value => ({\n  type: Type.ADD_EXPENSE,\n  payload: { name: value.name, amount: value.amount, id: value.id },\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: id,\n});\n","import { combineReducers } from 'redux';\nimport { Type } from './actions';\n\nconst budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case Type.ADD_BUDGET:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst expenseReducer = (state = [], action) => {\n  switch (action.type) {\n    case Type.ADD_EXPENSE:\n      return [...state, action.payload];\n\n    case Type.REMOVE_EXPENSE:\n      return state.filter(item => item.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  budget: budgetReducer,\n  expense: expenseReducer,\n});\n","import { combineReducers, createStore } from 'redux';\nimport plannerReducer from './planner/reducer';\n\nconst reducer = combineReducers({ planner: plannerReducer });\n\nconst store = createStore(reducer);\nexport default store;\n","import { createSelector } from 'reselect';\n\nexport const getBudget = state => state.planner.budget;\nexport const getExpense = state => state.planner.expense;\n\nexport const calculateTotalExpenses = createSelector(\n  getExpense,\n  expenses => expenses.reduce((total, expense) => total + expense.amount, 0),\n);\nexport const calculateBalance = createSelector(\n  [getBudget, calculateTotalExpenses],\n  (budget, expenses) => budget - expenses,\n);\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({ onSubmit, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.defaultProps = {\r\n  onSubmit: () => null,\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  customStyles: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Label;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ type, name }) => (\r\n  <StyledInput\r\n    type={type}\r\n    name={name}\r\n    placeholder={name === 'amount' ? 'Type amount...' : 'Type name...'}\r\n  />\r\n);\r\n\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: ' text',\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ type, label, onClick }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  label: '',\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from '../shared/Form';\r\nimport Label from '../shared/Label';\r\nimport Input from '../shared/Input';\r\nimport Button from '../shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nconst BudgetForm = ({ onSave }) => {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const currentInput = Number(e.target.querySelector('input').value);\r\n    onSave(currentInput);\r\n\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label customStyles={labelStyles}>\r\n        Enter your total budget\r\n        <Input type=\"number\" name=\"amount\" />\r\n      </Label>\r\n\r\n      <Button label=\"Save\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nBudgetForm.propTypes = {\r\n  onSave: PropTypes.func.isRequired,\r\n  expenses: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default BudgetForm;\r\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/actions';\nimport BudgetForm from './BudgetForm.jsx';\nimport * as plannerSelectors from '../../redux/planner/selectors';\n\nconst mapStateToProps = state => ({\n  expenses: plannerSelectors.calculateTotalExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(plannerActions.addBudget(value)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BudgetForm);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport Form from '../shared/Form';\r\nimport Label from '../shared/Label';\r\nimport Input from '../shared/Input';\r\nimport Button from '../shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nconst ExpenseForm = ({ balance, onSave }) => {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const resultInput = {\r\n      name: e.target.querySelector('input[name=\"name\"]').value,\r\n      amount: Number(e.target.querySelector('input[name=\"amount\"]').value),\r\n      id: shortid.generate(),\r\n    };\r\n    onSave(resultInput);\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label customStyles={labelStyles}>\r\n        Enter expense name\r\n        <Input type=\"text\" name=\"name\" />\r\n      </Label>\r\n      <Label customStyles={labelStyles}>\r\n        Enter expense amount\r\n        <Input type=\"number\" name=\"amount\" />\r\n      </Label>\r\n\r\n      <Button label=\"Add\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nExpenseForm.propTypes = {\r\n  onSave: PropTypes.func.isRequired,\r\n  balance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/actions';\nimport ExpenseForm from './ExpenseForm.jsx';\nimport * as plannerSelectors from '../../redux/planner/selectors';\n\nconst mapStateToProps = state => ({\n  balance: plannerSelectors.calculateBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(plannerActions.addExpense(value)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Button from '../shared/Button';\r\n\r\nconst ExpensesTable = ({ items, onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nexport default ExpensesTable;\r\n\r\nExpensesTable.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Stat = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Value>{value}&nbsp;&#x24;</Value>\r\n  </Container>\r\n);\r\n\r\nStat.defaultProps = {\r\n  isPositive: true,\r\n};\r\nStat.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  isPositive: PropTypes.bool,\r\n};\r\n\r\nexport default Stat;\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Stat from '../Stat/Stat';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budget, expenses, balance }) => (\r\n  <Container>\r\n    <Stat label=\"Budget\" value={budget} isPositive />\r\n    <Stat label=\"Expenses\" value={expenses} isPositive={false} />\r\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nexport default Values;\r\n\r\nValues.propTypes = {\r\n  budget: PropTypes.number.isRequired,\r\n  balance: PropTypes.number.isRequired,\r\n  expenses: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport BudgetForm from '../BudgetForm/BudgetFormContainer.js';\r\nimport ExpenseForm from '../ExpenseForm/ExpenseFormContainer.js';\r\nimport ExpensesTable from '../ExpensesTable/ExpensesTable';\r\nimport Values from '../Values/Values';\r\n\r\nconst App = ({ budget, expenses, removeExpense, totalExpenses, balance }) => (\r\n  <Container>\r\n    <BudgetForm />\r\n    <Values budget={budget} expenses={totalExpenses} balance={balance} />\r\n    <ExpenseForm />\r\n    {expenses.length > 0 && (\r\n      <ExpensesTable items={expenses} onRemove={removeExpense} />\r\n    )}\r\n  </Container>\r\n);\r\n\r\nApp.propTypes = {\r\n  budget: PropTypes.number.isRequired,\r\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  removeExpense: PropTypes.func.isRequired,\r\n  totalExpenses: PropTypes.number.isRequired,\r\n  balance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/actions';\nimport * as plannerSelectors from '../../redux/planner/selectors';\nimport App from './App.jsx';\n\nconst mapStateToProps = state => ({\n  budget: plannerSelectors.getBudget(state),\n  expenses: plannerSelectors.getExpense(state),\n  totalExpenses: plannerSelectors.calculateTotalExpenses(state),\n  balance: plannerSelectors.calculateBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeExpense: id => dispatch(plannerActions.removeExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/AppContainer';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}