{"version":3,"sources":["redux/planner/actions.js","redux/planner/reducer.js","redux/store.js","redux/planner/selectors.js","components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","utils/checkBudget.js","components/BudgetForm/BudgetForm.jsx","components/BudgetForm/BudgetFormContainer.js","utils/checkExpense.js","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.jsx","components/Stat/Stat.jsx","components/Values/Values.jsx","components/App/App.jsx","components/App/AppContainer.js","index.js"],"names":["Type","combineReducers","budget","state","action","type","payload","expense","filter","item","id","reducer","planner","plannerReducer","store","createStore","getBudget","getExpense","calculateTotalExpenses","createSelector","expenses","reduce","total","amount","calculateBalance","Form","onSubmit","children","StyledForm","defaultProps","styled","form","Label","customStyles","StyledLabel","label","props","Input","name","StyledInput","placeholder","input","Button","onClick","StyledButton","button","check","inputValue","toast","warn","position","POSITION","BOTTOM_LEFT","Number","error","BudgetForm","onSave","e","preventDefault","val","target","querySelector","value","checkBudget","currentInput","reset","connect","plannerSelectors","dispatch","plannerActions","balance","ExpenseForm","checkExpense","resultInput","shortid","generate","ExpensesTable","items","onRemove","Table","map","key","table","Stat","isPositive","Container","Value","div","p","section","Values","App","removeExpense","totalExpenses","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1bf3eae.chunk.js","sourcesContent":["export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addBudget = value => ({\n  type: Type.ADD_BUDGET,\n  payload: value,\n});\n\nexport const addExpense = value => ({\n  type: Type.ADD_EXPENSE,\n  payload: { name: value.name, amount: value.amount, id: value.id },\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: id,\n});\n","import { combineReducers } from 'redux';\nimport { Type } from './actions';\n\nconst budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case Type.ADD_BUDGET:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst expenseReducer = (state = [], action) => {\n  switch (action.type) {\n    case Type.ADD_EXPENSE:\n      return [...state, action.payload];\n\n    case Type.REMOVE_EXPENSE:\n      return state.filter(item => item.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  budget: budgetReducer,\n  expense: expenseReducer,\n});\n","import { combineReducers, createStore } from 'redux';\nimport plannerReducer from './planner/reducer';\n\nconst reducer = combineReducers({ planner: plannerReducer });\n\nconst store = createStore(reducer);\nexport default store;\n","import { createSelector } from 'reselect';\n\nexport const getBudget = state => state.planner.budget;\nexport const getExpense = state => state.planner.expense;\n\nexport const calculateTotalExpenses = createSelector(\n  getExpense,\n  expenses => expenses.reduce((total, expense) => total + expense.amount, 0),\n);\nexport const calculateBalance = createSelector(\n  [getBudget, calculateTotalExpenses],\n  (budget, expenses) => budget - expenses,\n);\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({ onSubmit, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.defaultProps = {\r\n  onSubmit: () => null,\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  customStyles: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Label;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ type, name }) => (\r\n  <StyledInput\r\n    type={type}\r\n    name={name}\r\n    placeholder={name === 'amount' ? 'Type amount...' : 'Type name...'}\r\n  />\r\n);\r\n\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: ' text',\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ type, label, onClick }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  label: '',\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { toast } from 'react-toastify';\n\nconst check = (inputValue, expenses) => {\n  if (inputValue < 0) {\n    toast.warn('Budget is negative!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue === '') {\n    toast.warn('Budget is empty!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (Number(inputValue) === 0) {\n    toast.warn('Budget is zero!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue < expenses) {\n    toast.error('Budget less then expenses', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  return true;\n};\n\nexport default check;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport checkBudget from '../../utils/checkBudget.js';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nconst BudgetForm = ({ onSave, expenses }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const val = e.target.querySelector('input').value;\n    if (checkBudget(val, expenses)) {\n      const currentInput = Number(val);\n      onSave(currentInput);\n      e.target.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter your total budget\n        <Input type=\"number\" name=\"amount\" />\n      </Label>\n\n      <Button label=\"Save\" type=\"submit\" />\n    </Form>\n  );\n};\n\nBudgetForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default BudgetForm;\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/actions';\nimport BudgetForm from './BudgetForm.jsx';\nimport * as plannerSelectors from '../../redux/planner/selectors';\n\nconst mapStateToProps = state => ({\n  expenses: plannerSelectors.calculateTotalExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(plannerActions.addBudget(value)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BudgetForm);\n","import { toast } from 'react-toastify';\n\nconst check = (inputValue, name, balance) => {\n  if (name === '') {\n    toast.warn('Expense name is empty!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue < 0) {\n    toast.warn('Expense is negative!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue === '') {\n    toast.warn('Expense is empty!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (Number(inputValue) === 0) {\n    toast.warn('Expense is zero!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue > balance) {\n    toast.error('Budget is not enough', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  return true;\n};\n\nexport default check;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport checkExpense from '../../utils/checkExpense.js';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nconst ExpenseForm = ({ balance, onSave }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.querySelector('input[name=\"name\"]').value;\n    const val = e.target.querySelector('input[name=\"amount\"]').value;\n    if (checkExpense(val, name, balance)) {\n      const resultInput = {\n        name,\n        amount: Number(val),\n        id: shortid.generate(),\n      };\n      onSave(resultInput);\n      e.target.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter expense name\n        <Input type=\"text\" name=\"name\" />\n      </Label>\n      <Label customStyles={labelStyles}>\n        Enter expense amount\n        <Input type=\"number\" name=\"amount\" />\n      </Label>\n\n      <Button label=\"Add\" type=\"submit\" />\n    </Form>\n  );\n};\n\nExpenseForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default ExpenseForm;\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/actions';\nimport ExpenseForm from './ExpenseForm.jsx';\nimport * as plannerSelectors from '../../redux/planner/selectors';\n\nconst mapStateToProps = state => ({\n  balance: plannerSelectors.calculateBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(plannerActions.addExpense(value)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Button from '../shared/Button';\r\n\r\nconst ExpensesTable = ({ items, onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nexport default ExpensesTable;\r\n\r\nExpensesTable.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Stat = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Value>{value}&nbsp;&#x24;</Value>\r\n  </Container>\r\n);\r\n\r\nStat.defaultProps = {\r\n  isPositive: true,\r\n};\r\nStat.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  isPositive: PropTypes.bool,\r\n};\r\n\r\nexport default Stat;\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Stat from '../Stat/Stat';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budget, expenses, balance }) => (\r\n  <Container>\r\n    <Stat label=\"Budget\" value={budget} isPositive />\r\n    <Stat label=\"Expenses\" value={expenses} isPositive={false} />\r\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nexport default Values;\r\n\r\nValues.propTypes = {\r\n  budget: PropTypes.number.isRequired,\r\n  balance: PropTypes.number.isRequired,\r\n  expenses: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport BudgetForm from '../BudgetForm/BudgetFormContainer.js';\nimport ExpenseForm from '../ExpenseForm/ExpenseFormContainer.js';\nimport ExpensesTable from '../ExpensesTable/ExpensesTable';\nimport Values from '../Values/Values';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = ({ budget, expenses, removeExpense, totalExpenses, balance }) => (\n  <Container>\n    <BudgetForm />\n    <Values budget={budget} expenses={totalExpenses} balance={balance} />\n    <ExpenseForm />\n    {expenses.length > 0 && (\n      <ExpensesTable items={expenses} onRemove={removeExpense} />\n    )}\n    <ToastContainer />\n  </Container>\n);\n\nApp.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n  totalExpenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default App;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/actions';\nimport * as plannerSelectors from '../../redux/planner/selectors';\nimport App from './App.jsx';\n\nconst mapStateToProps = state => ({\n  budget: plannerSelectors.getBudget(state),\n  expenses: plannerSelectors.getExpense(state),\n  totalExpenses: plannerSelectors.calculateTotalExpenses(state),\n  balance: plannerSelectors.calculateBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeExpense: id => dispatch(plannerActions.removeExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/AppContainer';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}